[{"D:\\SearchComponent\\my-search\\src\\index.js":"1","D:\\SearchComponent\\my-search\\src\\App.js":"2","D:\\SearchComponent\\my-search\\src\\reportWebVitals.js":"3","D:\\SearchComponent\\my-search\\src\\components\\Searchbox\\Searchbox1.js":"4","D:\\SearchComponent\\my-search\\src\\components\\Searchbox\\SearchList.js":"5","D:\\SearchComponent\\my-search\\src\\components\\Searchbox\\Searchlist.js":"6","D:\\SearchComponent\\my-search\\src\\components\\Searchbox\\Navbar.js":"7","D:\\SearchComponent\\my-search\\src\\components\\Searchbox\\Customfields.js":"8"},{"size":545,"mtime":1611964933220,"results":"9","hashOfConfig":"10"},{"size":876,"mtime":1613504949102,"results":"11","hashOfConfig":"10"},{"size":362,"mtime":499162500000,"results":"12","hashOfConfig":"10"},{"size":1517,"mtime":1613431674401,"results":"13","hashOfConfig":"10"},{"size":1149,"mtime":1611959101215,"results":"14","hashOfConfig":"10"},{"size":1244,"mtime":1613431823591,"results":"15","hashOfConfig":"10"},{"size":1208,"mtime":1613436122952,"results":"16","hashOfConfig":"10"},{"size":7621,"mtime":1613447454327,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"1glrifd",{"filePath":"21","messages":"22","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"20"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"20"},"D:\\SearchComponent\\my-search\\src\\index.js",[],["38","39"],"D:\\SearchComponent\\my-search\\src\\App.js",["40","41","42"],"D:\\SearchComponent\\my-search\\src\\reportWebVitals.js",[],"D:\\SearchComponent\\my-search\\src\\components\\Searchbox\\Searchbox1.js",[],["43","44"],"D:\\SearchComponent\\my-search\\src\\components\\Searchbox\\SearchList.js",[],"D:\\SearchComponent\\my-search\\src\\components\\Searchbox\\Searchlist.js",[],"D:\\SearchComponent\\my-search\\src\\components\\Searchbox\\Navbar.js",["45","46","47","48","49","50"],"import React, {Component} from 'react';\r\n//import { NavLink } from 'react-router-dom';\r\nimport {Navbar, Nav, NavDropdown, Form, NavItem,  FormControl,Button,NavLink} from 'react-bootstrap';\r\nimport {BrowserRouter as Router, Switch,Route,Link } from 'react-router-dom';\r\nimport Searchbox1 from './Searchbox1';\r\nimport Searchlist from './Searchlist';\r\n//import About from './About';\r\n//import Nav from './components/Navbar/Navigation';\r\n//import Home from './Home';\r\n\r\nclass Navigation extends React.Component{\r\n    render(){\r\n        return(\r\n\r\n<Router>\r\n<div className=\"App\">\r\n  \r\n  \r\n<Navbar fixed=\"top\" bg=\"white\" expand=\"lg\">\r\n  <Navbar.Brand href=\"#home\"></Navbar.Brand>\r\n  <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n  <Navbar.Collapse id=\"basic-navbar-nav\">\r\n    <Nav className=\"mr-auto\">\r\n     <NavLink href=\"#home\"><Link to=\"/\">WareHouse</Link></NavLink>\r\n     <NavLink href=\"#link\"><Link to=\"/list\">List</Link></NavLink>\r\n     \r\n    </Nav>\r\n     </Navbar.Collapse>\r\n</Navbar>\r\n\r\n<Route path=\"/list\">\r\n<Searchlist />\r\n\r\n</Route>\r\n<Route path=\"/\">\r\n<Searchbox1 />\r\n\r\n</Route>\r\n\r\n<Switch>\r\n\r\n\r\n</Switch>\r\n</div>\r\n</Router>\r\n    )\r\n    }\r\n};\r\nexport default Navigation;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","D:\\SearchComponent\\my-search\\src\\components\\Searchbox\\Customfields.js",["51","52"],"import React, { Component } from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport Form from 'react-jsonschema-form'\r\n\r\n//import './App.css'\r\n//import style from './component/Searchbox/Cust/Customfields/Style.css';\r\n\r\n/**\r\n * Custom field is defined as a standard React component\r\n * Props:\r\n * - schema: - {} - defines the subset of schema for the prop the field is registered to - address in this case\r\n * - required - bool - is this marked as required\r\n * - uiSchema - {} - subset of the UI Schema for the prop the field is registered to\r\n * - errorSchema {} - ???\r\n * - idSchema - {} - lists the expected ids for the elements\r\n * - formData - {} - subset of formData that pertains to this field\r\n * - registry: {}\r\n *  -- fields - {} - fields registered within this part of the schema?\r\n *  -- widgets - {} - widgets registered within this part of the schema?\r\n *  -- definitions - {} - ???\r\n *  -- formContext - {} - ???\r\n * - disabled - bool\r\n * - readonly - bool\r\n * - autofocus - bool\r\n * - formContext - {} - ??? - yup, separate formContext from the one above\r\n * - onChange - fn to propagate changes up to the containing form\r\n */\r\n\r\nclass Customfields extends Component {\r\n  state = {\r\n    street: '',\r\n    street2: '',\r\n    city: '',\r\n    state: '', // enum\r\n    postalCode: ''\r\n  }\r\n\r\n  // This handles getting updated props into state - since values need to be updated locally on state,\r\n  // but props can also be controlled from outside the component, we need to merge incoming values into\r\n  // state\r\n  static getDerivedStateFromProps(nextProps, prevState) {\r\n    const newState = {\r\n      ...prevState,\r\n      ...nextProps.formData\r\n    }\r\n    return newState\r\n  }\r\n\r\n  onChange = name => evt => {\r\n    this.setState(\r\n      {\r\n        [name]: evt.target.value\r\n      },\r\n      () => this.props.onChange(this.state)\r\n    )\r\n  }\r\n\r\n  loadZip = evt => {\r\n    evt.preventDefault()\r\n    // Imagine an XHR call to lookup zip based on address info\r\n    // Contrived, but it makes the point\r\n    setTimeout(() => {\r\n      this.setState({ postalCode: '08007' }, () =>\r\n        this.props.onChange(this.state)\r\n      )\r\n    }, 500)\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        {/* This is a handy way to inspect the rather large props object that gets passed in */}\r\n        {/* <div>{JSON.stringify(this.props, null, 2)}</div> */}\r\n        <input\r\n          type=\"text\"\r\n          onChange={this.onChange('street')}\r\n          placeholder=\"street\"\r\n          value={this.state.street}\r\n          disabled={this.props.disabled}\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          onChange={this.onChange('street2')}\r\n          placeholder=\"street line two\"\r\n          value={this.state.street2}\r\n          disabled={this.props.disabled}\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          onChange={this.onChange('city')}\r\n          placeholder=\"city\"\r\n          value={this.state.city}\r\n          disabled={this.props.disabled}\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          onChange={this.onChange('state')}\r\n          placeholder=\"state\"\r\n          value={this.state.state}\r\n          disabled={this.props.disabled}\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          onChange={this.onChange('postalCode')}\r\n          placeholder=\"postal code\"\r\n          value={this.state.postalCode}\r\n          disabled={this.props.disabled}\r\n        />\r\n        <button onClick={this.loadZip} disabled={this.props.disabled}>\r\n          load zip\r\n        </button>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n// Create a mapping of custom field names to Components\r\nconst fields = {\r\n  address: Customfields\r\n}\r\n\r\nconst schema = {\r\n  title: 'Custom Fields',\r\n  type: 'object',\r\n  properties: {\r\n    name: {\r\n      type: 'string'\r\n    },\r\n    address: {\r\n      type: 'object',\r\n      title: 'Address',\r\n      properties: {\r\n        street: { type: 'string' },\r\n        street2: { type: 'string' },\r\n        city: { type: 'string' },\r\n        state: {\r\n          type: 'string',\r\n          enum: ['MA', 'NC', 'CA', 'NY', 'MI', 'OH', 'KY']\r\n        },\r\n        postalCode: { type: 'string' }\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nconst formData = {\r\n  name: '',\r\n  address: {\r\n    street: '',\r\n    street2: '',\r\n    city: '',\r\n    state: '',\r\n    postalCode: ''\r\n  }\r\n}\r\n\r\n// subfields class is adding indentation and a left border\r\n// By default, the fields will look like part of a single form\r\n// with everything at the same level\r\nconst uiSchema = {\r\n  'ui:disabled': true, // enable/disable entire form\r\n  name: { 'ui:title': 'Full Name' },\r\n  address: {\r\n    'ui:field': 'address', // associate the address section of schema with the address custom field\r\n    classNames: 'subfields',\r\n    street: {\r\n      classNames: 'subfields'\r\n    }\r\n  }\r\n}\r\n\r\nclass CustomfieldsImp extends Component {\r\n  state = {\r\n    formData: { ...this.props.formData },\r\n    uiSchema: { ...this.props.uiSchema }\r\n  }\r\n\r\n  static getDerivedStateFromProps(nextProps, prevState) {\r\n    const newState = {\r\n      ...prevState,\r\n      formData: { ...nextProps.formData },\r\n      uiSchema: { ...prevState.uiSchema, 'ui:disabled': nextProps.isDisabled }\r\n    }\r\n    return newState\r\n  }\r\n\r\n  handleCancel = evt => {\r\n    // Just reset formData\r\n    this.setState({ formData: this.props.formData })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Form\r\n          schema={this.props.schema}\r\n          uiSchema={this.state.uiSchema}\r\n          formData={this.state.formData}\r\n          fields={this.props.fields}\r\n          onSubmit={console.log.bind(console)}\r\n        >\r\n          {/*Passing children to form allows you to override the default submit add a cancel - must have a type[submit] to trigger form*/}\r\n          {/*Default is a single button with btn-primary & no cancel*/}\r\n          <div>\r\n            <button className=\"btn btn-success\" type=\"submit\">\r\n              Submit\r\n            </button>\r\n            <button\r\n              className=\"btn btn-link\"\r\n              type=\"button\"\r\n              onClick={this.handleCancel}\r\n            >\r\n              Cancel\r\n            </button>\r\n          </div>\r\n        </Form>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nclass Customsfields extends Component {\r\n  state = {\r\n    formData,\r\n    schema,\r\n    fields,\r\n    uiSchema,\r\n    isDisabled: false\r\n  }\r\n\r\n  sendData = evt => {\r\n    evt.preventDefault()\r\n    console.log('Setting formData')\r\n\r\n    this.setState({\r\n      formData: {\r\n        name: 'Default',\r\n        address: {\r\n          street: '111 E. Elm St',\r\n          street2: '',\r\n          city: 'Anywhere',\r\n          state: 'MI',\r\n          postalCode: '20345'\r\n        }\r\n      }\r\n    })\r\n  }\r\n\r\n  toggleForm = () => {\r\n    this.setState(state => ({ isDisabled: !state.isDisabled }))\r\n  }\r\n\r\n  render() {\r\n    console.log('rendering with state', this.state)\r\n    return (\r\n      <div>\r\n        <button onClick={this.sendData}>Send Updated Data into Form</button>\r\n        <label htmlFor=\"disableForm\">Disable form?</label>\r\n        <input\r\n          type=\"checkbox\"\r\n          name=\"disableForm\"\r\n          checked={this.state.isDisabled}\r\n          onChange={this.toggleForm}\r\n        />\r\n        {/*Add some top-level controls to manipulate the data to show the capabilities - like disabling an entire custom field in one shot*/}\r\n        <CustomfieldsImp\r\n          formData={this.state.formData}\r\n          schema={this.state.schema}\r\n          fields={this.state.fields}\r\n          uiSchema={this.state.uiSchema}\r\n          isDisabled={this.state.isDisabled}\r\n        />\r\n      </div>\r\n    )\r\n  }\r\n}\r\nexport default Customfields;\r\n\r\n\r\n",{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","severity":1,"message":"58","line":1,"column":8,"nodeType":"59","messageId":"60","endLine":1,"endColumn":12},{"ruleId":"57","severity":1,"message":"61","line":6,"column":8,"nodeType":"59","messageId":"60","endLine":6,"endColumn":17},{"ruleId":"57","severity":1,"message":"62","line":8,"column":8,"nodeType":"59","messageId":"60","endLine":8,"endColumn":18},{"ruleId":"53","replacedBy":"63"},{"ruleId":"55","replacedBy":"64"},{"ruleId":"57","severity":1,"message":"65","line":1,"column":16,"nodeType":"59","messageId":"60","endLine":1,"endColumn":25},{"ruleId":"57","severity":1,"message":"66","line":3,"column":22,"nodeType":"59","messageId":"60","endLine":3,"endColumn":33},{"ruleId":"57","severity":1,"message":"67","line":3,"column":35,"nodeType":"59","messageId":"60","endLine":3,"endColumn":39},{"ruleId":"57","severity":1,"message":"68","line":3,"column":41,"nodeType":"59","messageId":"60","endLine":3,"endColumn":48},{"ruleId":"57","severity":1,"message":"69","line":3,"column":51,"nodeType":"59","messageId":"60","endLine":3,"endColumn":62},{"ruleId":"57","severity":1,"message":"70","line":3,"column":63,"nodeType":"59","messageId":"60","endLine":3,"endColumn":69},{"ruleId":"57","severity":1,"message":"71","line":2,"column":8,"nodeType":"59","messageId":"60","endLine":2,"endColumn":16},{"ruleId":"57","severity":1,"message":"72","line":222,"column":7,"nodeType":"59","messageId":"60","endLine":222,"endColumn":20},"no-native-reassign",["73"],"no-negated-in-lhs",["74"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'Searchbox' is defined but never used.","'Searchlist' is defined but never used.",["73"],["74"],"'Component' is defined but never used.","'NavDropdown' is defined but never used.","'Form' is defined but never used.","'NavItem' is defined but never used.","'FormControl' is defined but never used.","'Button' is defined but never used.","'ReactDOM' is defined but never used.","'Customsfields' is defined but never used.","no-global-assign","no-unsafe-negation"]